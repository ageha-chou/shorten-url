package com.diepnn.shortenurl.entity;

import com.diepnn.shortenurl.common.enums.UrlInfoStatus;
import com.diepnn.shortenurl.converter.UrlInfoStatusConverter;
import jakarta.persistence.Column;
import jakarta.persistence.Convert;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.Index;
import jakarta.persistence.Table;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

import java.time.LocalDateTime;

/**
 * <p>Represents a shortened URL record in the system.</p>
 * <p>Domain rules:</p>
 * <ul>
 *     <li>Short URL must be unique.</li>
 *     <li>originalUrl is immutable after creation.</li>
 *     <li>status is set to {@link UrlInfoStatus#ACTIVE} on creation.</li>
 *     <li>createdDatetime is set on insert; lastAccessDatetime updates on each visit.</li>
 * </ul>
 *
 * <p>Persistence notes:</p>
 * <ul>
 *     <li>ID is generated by {@link com.diepnn.shortenurl.common.generator.IdGenerator}</li>
 * </ul>
 */
@Entity
@Table(name = "url_info",
       indexes = {
               @Index(name = "uidx_url_info_original_url", columnList = "original_url", unique = true)
       })
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@Builder
public class UrlInfo {
    @Id
    private Long id;

    /** Public, shareable short code used for redirection (unique). */
    @Column
    private String shortCode;

    /** Status of the short URL lifecycle. */
    @Column
    @Convert(converter = UrlInfoStatusConverter.class)
    private UrlInfoStatus status;

    /** Original destination URL. Must be a valid absolute URL; not null. */
    @Column
    private String originalUrl;

    /** Whether the short code is a user-defined alias */
    @Column(name = "is_alias")
    private Boolean alias;

    /** IP address of the user who created the short URL. */
    @Column
    private String createdByIp;

    /** User agent of the user who created the short URL. */
    @Column
    private String createdByUserAgent;

    /** Timestamp when the short URL was created (UTC). */
    @Column
    private LocalDateTime createdDatetime;

    /** Timestamp when the short URL was last updated (UTC). */
    @Column
    private LocalDateTime updatedDatetime;

    /** Last time this short URL was accessed for redirection (UTC). */
    @Column
    private LocalDateTime lastAccessDatetime;

    /** Timestamp when the short URL was deleted (UTC). */
    @Column
    private LocalDateTime deletedDatetime;

    /**
     * The user's id who created the short URL.
     */
    @Column(name = "created_by")
    private Long userId;
}
